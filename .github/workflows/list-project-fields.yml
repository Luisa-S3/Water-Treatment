name: list project fields

on:
  pull_request:
    types: [opened, reopened, edited, ready_for_review, closed]
    branches:
      - main  # ejecuta solo si el PR va dirigido a main

jobs:
  list-fields:
    runs-on: ubuntu-latest
    steps:
      - name: List fields in user project
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_PROJECT_TOKEN }}
          script: |
            const username = "Luisa-S3"; // cámbialo si aplica
            const projectNumber = 1;      // número del ProjectV2 en la URL

            const query = `
              query($login: String!, $number: Int!) {
                user(login: $login) {
                  projectV2(number: $number) {
                    id
                    title
                    fields(first: 50) {
                      nodes {
                        __typename
                        ... on ProjectV2FieldCommon {
                          id
                          name
                          dataType
                        }
                        ... on ProjectV2SingleSelectField {
                          options {
                            id
                            name
                          }
                        }
                        ... on ProjectV2IterationField {
                          configuration {
                            iterations {
                              id
                              title
                              startDate
                              duration
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            `;

            const result = await github.graphql(query, {
              login: username,
              number: projectNumber
            });

            const proj = result.user?.projectV2;
            if (!proj) {
              core.setFailed("No se encontró el proyecto. Verifica login/number y el scope del token.");
              return;
            }

            console.log("📌 Project title:", proj.title);
            console.log("🆔 Project ID:", proj.id);
            console.log("📋 Campos:");
            for (const f of proj.fields.nodes) {
              const name = f.name ?? "(sin nombre)";
              const id = f.id ?? "(sin id)";
              const typeName = f.__typename ?? "(desconocido)";
              const dt = f.dataType ?? "(n/a)";
              console.log(`➡️  ${name} | ID: ${id} | __typename: ${typeName} | dataType: ${dt}`);

              if (typeName === "ProjectV2SingleSelectField" && Array.isArray(f.options)) {
                for (const opt of f.options) {
                  console.log(`    - opción: ${opt.name} (${opt.id})`);
                }
              }

              if (typeName === "ProjectV2IterationField" && f.configuration?.iterations?.length) {
                for (const it of f.configuration.iterations) {
                  console.log(`    - iteración: ${it.title} | inicio: ${it.startDate} | duración: ${it.duration}`);
                }
              }
            }
